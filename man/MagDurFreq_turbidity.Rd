% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MagDurFreq_turbidity.R
\name{MagDurFreq_turbidity}
\alias{MagDurFreq_turbidity}
\title{Assess magnitude, duration, and frequency (turbidity dependent)}
\usage{
MagDurFreq_turbidity(
  wqs_crosswalk,
  input_samples_filtered,
  input_sufficiency,
  reference_sites
)
}
\arguments{
\item{wqs_crosswalk}{Water quality standards crosswalk table}

\item{input_samples_filtered}{Turbidity samples for the AUs listed as reference sites in reference_sites table}

\item{input_sufficiency}{Data sufficiency table generated using the data_processsing.R script}

\item{reference_sites}{List of paired reference sites for each AU in 'input_samples_filtered'}
}
\value{
A dataset with MagDurFreq results
}
\description{
The MagDurFreq_turbidity function applies Alaska's surface water quality
standards (SWQS) to turbidity-dependent water quality data. Ideally, data are
filtered before running this function to only include data sufficient
for water quality assessments. Water quality exceedances are determined using the
magnitude, duration, and frequency components of Alaska's SWQS.
}
\examples{
# Example, data from Excel
\dontrun{
# Packages
library(readr) # readr is a tidyverse package to read CSVs

df_ExampSamps <- read_csv(system.file("extdata/AK_Example_Samples.csv"
                                       , package = "AKDECtools")
                            , guess_max = 10^6)

df_WQS_Crosswalk <- read_csv(system.file("extdata/AK_WQS_Crosswalk.csv"
                                       , package = "AKDECtools")
                            , guess_max = 10^6)

df_Data_Sufficiency <- read_csv(system.file("extdata/AK_Data_Sufficiency.csv"
                                       , package = "AKDECtools")
                            , guess_max = 10^6)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Example 1

# set seed
set.seed(42)

#Get turbidity samples
turbidity_samples <- df_ExampSamps \%>\%
filter(TADA.CharacteristicName == 'TURBIDITY') \%>\%
filter(!is.na(AUID_ATTNS))

#Pull 5 monitoring sites
sites <- turbidity_samples \%>\%
select(MonitoringLocationIdentifier) \%>\%
unique() \%>\%
slice_sample(n=5) \%>\%
pull()

au_sites <- turbidity_samples \%>\%
filter(MonitoringLocationIdentifier \%in\% sites) \%>\%
select(AUID_ATTNS) \%>\%
unique() \%>\%
pull()

#Create reference site table for analysis
reference_sites <- tibble(AUID_ATTNS = au_sites, ReferenceSites = sites)

#Pull only samples from these AUs
turbidity_samples_pull <- turbidity_samples \%>\%
filter(AUID_ATTNS \%in\% reference_sites$AUID_ATTNS)

# run MagDurFreq_hardness
MagDurFreq_turbidity(df_WQS_Crosswalk, turbidity_samples_pull
, df_Data_Sufficiency, reference_sites)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
}

}
